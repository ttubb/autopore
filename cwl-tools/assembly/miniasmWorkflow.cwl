#!/usr/bin/env cwl-runner

cwlVersion: v1.0
class: Workflow
label: Creates an assembly from long reads (nanopore or pacbio).
doc: |
  Uses a pipeline of minimap2 and miniasm to generate an uncorrected assembly based on the input reads. Then executes three rounds of racon polishing to correct the assembly.

hints:
  SoftwareRequirement:
    packages:
      minimap2:
        specs: [ https://github.com/lh3/minimap2 ]
        version: [ "2.16" ]
      miniasm:
        specs: [ https://biosphere.france-bioinformatique.fr/wikia2/index.php/Miniasm
                 https://github.com/lh3/miniasm ]
        version: [ "0.3" ]
      racon:
        specs: [ https://github.com/isovic/racon ]
        version: [ "1.3.2" ]
        
requirements:
  StepInputExpressionRequirement: {}
  
inputs:
  reads:
    label: File containing reads to build the assembly from.
    type: File
  worker_threads:
    label: Number of CPU-threads used in computationally intensive steps.
    type: int
  assembly_unitig_threshold:
    label: During miniasm assembly, unitigs comprising less reads will be discarded.
    type: int
    default: 4
  assembly_overlap_removal_rounds:
    label: Number of rounds of short overlap removal miniasm will perform.
    type: int
    default: 3

outputs:
  assembly:
    label: Assembly generated by this pipeline.
    type: File
    outputSource: consensus_round3/polished_assembly
  unitigs_layout:
    label: Layout of unitigs generated in assembly step.
    type: File
    outputSource: assembling/unitigs_layout

steps:
  overlap_mapping:
    label: Perform all vs all overlap mapping.
    run: ../mapping/minimap2Tool.cwl
    in:
      preset:
        valueFrom: ava-ont
      worker_threads: worker_threads
      target: reads
      query: reads
    out: [alignment]
  assembling:
    label: Create draft assembly from uncorrected reads.
    run: miniasmTool.cwl
    in:
      reads: reads
      pairwise_alignment: overlap_mapping/alignment
      small_unitig_threshold: assembly_unitig_threshold
      overlap_removal_rounds: assembly_overlap_removal_rounds
    out: [unitigs_layout]
  gfa_to_fasta:
    label: Convert draft assembly to fasta format.
    run: ../misc/awkGFAtoFASTATool.cwl
    in:
      input_file: assembling/unitigs_layout
    out: [converted_file]
  contig_mapping_round1:
    label: Map reads to draft assembly.
    run: ../mapping/minimap2Tool.cwl
    in:
      preset:
        valueFrom: map-ont
      worker_threads: worker_threads
      target: gfa_to_fasta/converted_file
      query: reads
    out: [alignment]
  consensus_round1:
    label: Build consensus based on reads and draft assembly.
    run: ../polishing/raconTool.cwl
    in:
      worker_threads: worker_threads
      sequences: reads
      overlaps: contig_mapping_round1/alignment
      target_sequences: gfa_to_fasta/converted_file
    out: [polished_assembly]
  contig_mapping_round2:
    label: Map reads to second draft assembly.
    run: ../mapping/minimap2Tool.cwl
    in:
      preset:
        valueFrom: map-ont
      worker_threads: worker_threads
      target: consensus_round1/polished_assembly
      query: reads
    out: [alignment]
  consensus_round2:
    label: Build consensus based on reads and second draft assembly.
    run: ../polishing/raconTool.cwl
    in:
      worker_threads: worker_threads
      sequences: reads
      overlaps: contig_mapping_round2/alignment
      target_sequences: consensus_round1/polished_assembly
    out: [polished_assembly]
  contig_mapping_round3:
    label: Map reads to third draft assembly.
    run: ../mapping/minimap2Tool.cwl
    in:
      preset:
        valueFrom: map-ont
      worker_threads: worker_threads
      target: consensus_round2/polished_assembly
      query: reads
    out: [alignment]
  consensus_round3:
    label: Build consensus based on reads and third draft assembly.
    run: ../polishing/raconTool.cwl
    in:
      worker_threads: worker_threads
      sequences: reads
      overlaps: contig_mapping_round3/alignment
      target_sequences: consensus_round2/polished_assembly
    out: [polished_assembly]

s:author:
  - class: s:Person
    s:email: mailto:tom.tubb@googlemail.com
    s:name: Tom Tubbesing
s:dateCreated: "2019-05-15"
s:license: https://spdx.org/licenses/GPL-3.0-or-later

$namespaces:
  s: http://schema.org/
  edam: http://edamontology.org/

$schemas:
  - https://schema.org/version/latest/schema.rdf
  - http://edamontology.org/EDAM_1.20.owl
