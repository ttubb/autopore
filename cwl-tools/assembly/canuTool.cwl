#!/usr/bin/env cwl-runner

cwlVersion: v1.0
class: CommandLineTool
baseCommand: canu
label: Uses the canu long read assembler to assemble a genome from basecalled ONT nanopore reads.

hints:
  DockerRequirement:
    dockerPull: ttubb/canu:1.8
  SoftwareRequirement:
    packages:
      canu:
        specs: [ "https://identifiers.org/RRID:SCR_015880" ]
        version: [ "1.8" ]

requirements:
  InlineJavascriptRequirement: {}

arguments:
  - valueFrom: $((inputs.reads.nameroot)+"_canu_assembly") #canu output directory
    prefix: -d
    position: 1
  - valueFrom: $(inputs.reads.nameroot) #assembly name prefix
    prefix: -p
    position: 2

inputs:
  estimated_genome_size:
    label: Size estimate for sequenced genome. Can be provided as in int (e.g. 3000000) or a string (e.g. 3m).
    type: [int, string]
    inputBinding:
      position: 3
      separate: false
      prefix: genomeSize=
  reads:
    label: Basecalled ONT nanopore reads in fastq format.
    type: File
    inputBinding:
      prefix: -nanopore-raw
  low_coverage_threshold:
    label: Canu will stop assembly if coverage is below threshold.
    type: int?
    default: 0
    inputBinding:
      position: 4
      separate: false
      prefix: stopOnLowCoverage=

outputs:
  output_directory:
    label: Directory containing all output generated by canu.
    type: ["null", Directory]
    outputBinding:
      glob: $((inputs.reads.nameroot)+"_canu_assembly")
  draft_assembly:
    label: File with contigs assembled from nanopore reads.
    type: ["null", File]
    outputBinding:
      glob: $(((inputs.reads.nameroot)+"_canu_assembly/")+(inputs.reads.nameroot)+".contigs.fasta")
  contigs_read_layout:
    type: ["null", File]
    outputBinding:
      glob: $(((inputs.reads.nameroot)+"_canu_assembly/")+(inputs.reads.nameroot)+".contigs.layout")
  contigs_graph:
    type: ["null", File]
    outputBinding:
      glob: $(((inputs.reads.nameroot)+"_canu_assembly/")+(inputs.reads.nameroot)+".contigs.gfa")
  unassembled:
    label: Singleton reads / isolated contigs.
    type: ["null", File]
    outputBinding:
      glob: $(((inputs.reads.nameroot)+"_canu_assembly/")+(inputs.reads.nameroot)+".unassembled.fasta")
  unitigs:
    type: ["null", File]
    outputBinding:
      glob: $(((inputs.reads.nameroot)+"_canu_assembly/")+(inputs.reads.nameroot)+".unitigs.fasta")
  unitigs_read_layout:
    type: File
    outputBinding:
      glob: $(((inputs.reads.nameroot)+"_canu_assembly/")+(inputs.reads.nameroot)+".unitigs.layout")
  unitigs_graph:
    type: ["null", File]
    outputBinding:
      glob: $(((inputs.reads.nameroot)+"_canu_assembly/")+(inputs.reads.nameroot)+".unitigs.gfa")
  report:
    type: ["null", File]
    outputBinding:
      glob: $(((inputs.reads.nameroot)+"_canu_assembly/")+(inputs.reads.nameroot)+".report")
    
s:author:
  - class: s:Person
    s:email: mailto:tom.tubb@googlemail.com
    s:name: Tom Tubbesing
s:dateCreated: "2019-03-28"
s:license: "https://spdx.org/licenses/GPL-3.0-or-later.html"

$namespaces:
  s: "http://schema.org/"

$schemas:
  - https://schema.org/version/latest/schema.rdf
